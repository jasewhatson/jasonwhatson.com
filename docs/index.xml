<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My thoughts</title>
    <link>https://jasonwhatson.com/</link>
    <description>Recent content on My thoughts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Dec 2024 13:41:59 +1100</lastBuildDate><atom:link href="https://jasonwhatson.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GPU vs CPU Performance for Matrix Multiplication</title>
      <link>https://jasonwhatson.com/posts/gpu-vs-cpu-performance-for-matrix-multiplication/</link>
      <pubDate>Sat, 28 Dec 2024 13:41:59 +1100</pubDate>
      
      <guid>https://jasonwhatson.com/posts/gpu-vs-cpu-performance-for-matrix-multiplication/</guid>
      <description>Key Points in the Text 1.	LSTMs and Their Limitations •	LSTMs process input sequentially, token by token, which means: •	They cannot leverage parallel processing, as the current state depends on the previous token’s state. •	This leads to slower training times, especially for long sequences. •	They are recursive models, meaning each token must pass through the same network repeatedly, leading to bottlenecks in efficiency. 2.	Transformers and Parallelism •	Transformers, introduced in the seminal “Attention Is All You Need” paper (2017), solved this issue with: •	Positional embeddings: Adding positional information to represent sequence order, allowing tokens to be processed simultaneously instead of sequentially.</description>
    </item>
    
    <item>
      <title>The Complete Model of Money</title>
      <link>https://jasonwhatson.com/posts/the-complete-model-of-money/</link>
      <pubDate>Thu, 09 Nov 2023 19:45:56 +1100</pubDate>
      
      <guid>https://jasonwhatson.com/posts/the-complete-model-of-money/</guid>
      <description>Conceptual Foundations of Money Abstraction of Value 2. Regulatory Framework and Oversight
Rule of Law Government Military (as it pertains to economic stability and national security) 3. Financial System Infrastructure
Financial Institutions Centralized Ledger Information System Private Infrastructure Public Infrastructure Offshore Banking (as highlighted in &amp;ldquo;Treasure Islands&amp;rdquo; by Nicholas Shaxson) 4. Financial Instruments and Market Vehicles
Company Equity Derivatives Futures Contracts Government Bonds 5. Intellectual Property and Intangible Assets</description>
    </item>
    
    <item>
      <title>A World of Cryptographic Truth</title>
      <link>https://jasonwhatson.com/posts/a-world-of-cryptographic-truth/</link>
      <pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jasonwhatson.com/posts/a-world-of-cryptographic-truth/</guid>
      <description>Under construction - This article is a Work-In-Progress In the context of distributed systems and blockchain, cryptographic truth refers to the ability to verify the veracity of information using cryptographic means. Through encryption and hash functions, we can ensure the integrity and authenticity of data.
Encryption makes sure the content of a message is only accessible to those who possess the correct key. A hash function, on the other hand, generates a unique, fixed-size string of characters (the hash) from input data of any size.</description>
    </item>
    
    <item>
      <title>Crypto Projects Written in Golang</title>
      <link>https://jasonwhatson.com/posts/crypto-projects-written-in-golang/</link>
      <pubDate>Mon, 07 Nov 2022 22:18:07 +1100</pubDate>
      
      <guid>https://jasonwhatson.com/posts/crypto-projects-written-in-golang/</guid>
      <description>I first started developing in Golang back in 2012 upon version 1 release &amp;amp; since its initial release, Golang has become quite popular with several major crypto &amp;amp; blockchain projects. This is a quick overview of the projects which have sparked my interest firstly starting with a quote providing some insight into why Golang has had success in the blockchain space.
Golang is a systems programming language for building networked, distributed services.</description>
    </item>
    
  </channel>
</rss>
